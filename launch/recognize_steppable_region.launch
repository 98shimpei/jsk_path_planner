<launch>

  <arg name="rviz" default="true" />
  <arg name="ROBOT_FRAME"  default="body_on_odom" />
  <arg name="NODELET_MANAGER_NAME" default="recognize_steppable_region_nodelet"/>

  <param name="robot_description" textfile="$(find hrpsys_choreonoid_tutorials)/models/JAXON_JVRC_SENSORS.urdf" />

  <node name="$(arg NODELET_MANAGER_NAME)"
        pkg="nodelet" type="nodelet"
        args="manager"/>

  <!-- <node name="organized_multi_plane_segmentation" -->
  <!--       pkg="nodelet" type="nodelet" -->
  <!--       args="load jsk_pcl/OrganizedMultiPlaneSegmentation $(arg NODELET_MANAGER_NAME)"> -->
  <!--   <remap from="~input" to="/assembled_pointcloud2"/> -->
  <!--   <rosparam> -->
  <!--     publish_normal: true -->
  <!--   </rosparam> -->
  <!-- </node> -->

  <node pkg="nodelet" type="nodelet" name="robot_center_assembled_pointcloud"
        args="load jsk_pcl/TfTransformCloud $(arg NODELET_MANAGER_NAME)" output="screen">
    <remap from="~input" to="/assembled_pointcloud2" />
    <rosparam subst_value="true">
      target_frame_id: $(arg ROBOT_FRAME)
    </rosparam>
  </node>

  <node pkg="nodelet" type="nodelet" name="voxel_grid_z"
        args="load pcl/VoxelGrid $(arg NODELET_MANAGER_NAME)" output="screen">
    <!-- <remap from="~input" to="/assembled_pointcloud2" /> -->
    <remap from="~input" to="/robot_center_assembled_pointcloud/output" />
    <rosparam>
      filter_field_name: z
      filter_limit_min: -0.04
      filter_limit_max: 1.5
      filter_limit_negative: False
      leaf_size: 0.01
    </rosparam>
  </node>

  <node pkg="nodelet" type="nodelet" name="voxel_grid_x"
        args="load pcl/VoxelGrid $(arg NODELET_MANAGER_NAME)" output="screen">
    <remap from="~input" to="/voxel_grid_z/output" />
    <rosparam>
      filter_field_name: x
      filter_limit_min: -0.5
      filter_limit_max: 2.0
      filter_limit_negative: False
      leaf_size: 0.01
    </rosparam>
  </node>

  <node pkg="nodelet" type="nodelet" name="voxel_grid_y"
        args="load pcl/VoxelGrid $(arg NODELET_MANAGER_NAME)" output="screen">
    <remap from="~input" to="/voxel_grid_x/output" />
    <rosparam>
      filter_field_name: y
      filter_limit_min: -1.5
      filter_limit_max: 1.5
      filter_limit_negative: False
      leaf_size: 0.01
    </rosparam>
  </node>

  <node name="multi_plane_sac_segmentation"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/MultiPlaneSACSegmentation $(arg NODELET_MANAGER_NAME)">
    <!-- <remap from="~input" to="/kinect_head/depth_registered/points"/> -->
    <!-- <remap from="~input" to="/assembled_pointcloud2"/> -->
    <remap from="~input" to="/voxel_grid_y/output"/>
    <rosparam>
      use_normal: false
      use_clusters: false
      use_imu_parallel: false
      use_imu_perpendicular: false
    </rosparam>
  </node>

  <node name="dynparam_loader"
        pkg="dynamic_reconfigure" type="dynparam"
        args="load /multi_plane_sac_segmentation $(find jsk_path_planner)/config/multi_plane_sac_segmentation.yaml"/>

  <node name="cluster_indices_decomposer"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/ClusterPointIndicesDecomposer $(arg NODELET_MANAGER_NAME)">
    <!-- <remap from="~input" to="/kinect_head/depth_registered/points"/> -->
    <!-- <remap from="~input" to="/assembled_pointcloud2"/> -->
    <remap from="~input" to="/voxel_grid_y/output"/>
    <remap from="~target" to="multi_plane_sac_segmentation/output_indices"/>
  </node>

  <!-- visualize -->
  <!-- <node name="rviz" -->
  <!--       pkg="rviz" type="rviz" -->
  <!--       args="-d $(find jsk_pcl_ros)/sample/rviz/multi_plane_sac_segmentation.rviz"> -->
  <!-- </node> -->
  <node name="rviz" pkg="rviz" type="rviz"
        args="-d $(find jsk_path_planner)/rviz/realtime_steppable_region.rviz"
        output="screen" if="$(arg rviz)"/>
</launch>
